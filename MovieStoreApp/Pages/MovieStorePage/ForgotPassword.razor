@page "/forgotpassword"
@using Microsoft.AspNetCore.Components.Authorization
@using MovieStoreApp.Models
@using MovieStoreApp.ModelsVM
@using MovieStoreApp.Repositories
@inject MoviesAppDbContext context

<div class="container">
    <div>
        <h3 class="text-left fw-bold">Password Recovery</h3>
        <br />
    </div>
    <div>
        <p>
            Enter your email address below, and we'll email
            instructions to reset your password.
        </p>

        <table class="col-md-6">
            <tr>
                <td>
                    <label for="email"><b>Email Address</b></label>
                    <br />
                    <span class="required-indicator">*Required</span>
                </td>

                <td>
                    <input type="email" class="form-control" placeholder="Email Address" style="padding: 10px; width: 100%;" required @bind="email" @oninput="HandleEmailChange" />
                </td>
            </tr>
            <tr>
                <td>
                    <label for="newPassword"><b>New Password</b></label>
                    <br />
                    <span class="required-indicator">*Required</span>
                </td>

                <td>
                    <input type="password" class="form-control" placeholder="New Password" style="padding: 10px; width: 100%;" required @bind="newPassword" />
                </td>
            </tr>

            <tr>
                <td>
                    <label for="confirmPassword"><b>Confirm Password</b></label>
                    <br />
                    <span class="required-indicator">*Required</span>
                </td>
                <td>
                    <input type="password" class="form-control" placeholder="Confirm Password" style="padding: 10px; width: 100%;" required @bind="confirmPassword" />
                </td>
            </tr>
        </table>

        <br />
        <button type="submit" class="btn btn-primary" @onclick="ResetPassword">Reset my password</button>

    </div>
</div>

<p>@Msg</p>



@code {
    private string email;
    private string newPassword;
    private string confirmPassword;
    public string Msg;

    private async Task ResetPassword()
    {
        // Validate the email address
        if (string.IsNullOrEmpty(email))
        {
            Msg = "Please enter a valid email address.";
            return;
        }        

        // Call the repository method 
        MovieStoreAppRepositoryEF rep = new MovieStoreAppRepositoryEF(context);

        // Validate if the email exists in the database
        var emailExists = await rep.CheckEmailExists(email);
        if (!emailExists)
        {
            Msg = "The provided email address does not exist.";
            return;
        }

        // Validate the new password and confirm password
        if (string.IsNullOrEmpty(newPassword) || string.IsNullOrEmpty(confirmPassword))
        {
            Msg = "Please enter a new password and confirm password.";
            return;
        }

        if (newPassword != confirmPassword)
        {
            Msg = "The new password and confirm password do not match.";
            return;
        }

        // Call the repository method to update the password
        bool res = await rep.UpdatePassword(email, newPassword);      

        if (res == true)
        {
            Msg = "Password has been successfully updated.";
        }
        else
        {
            Msg = "Failed to update the password.";
        }        

        // Clear the form inputs after resetting the password
        email = string.Empty;
        newPassword = string.Empty;
        confirmPassword = string.Empty;
    }

    private void HandleEmailChange(ChangeEventArgs e)
    {
        email = e.Value.ToString();
        
    }
    
}
